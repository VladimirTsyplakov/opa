```cpp
#include <QApplication>
#include <QGraphicsScene>
#include <QGraphicsView>
#include <QScrollArea>
#include <QVBoxLayout>
#include <QWidget>
#include <QMouseEvent>
#include <poppler-qt4.h>

class PdfViewer : public QWidget {
    Q_OBJECT

public:
    PdfViewer(QWidget *parent = nullptr) : QWidget(parent) {
        scene = new QGraphicsScene(this);
        view = new QGraphicsView(scene, this);
        scrollArea = new QScrollArea(this);
        scrollArea->setWidget(view);
        scrollArea->setWidgetResizable(true);

        QVBoxLayout *layout = new QVBoxLayout(this);
        layout->addWidget(scrollArea);
        setLayout(layout);
    }

    void loadPdf(const QString &filePath) {
        document = Poppler::Document::load(filePath);
        if (!document) {
            qWarning("Failed to load PDF file.");
            return;
        }

        displayPage(0); // покажем первую страницу
    }

    void displayPage(int pageIndex) {
        if (!document || pageIndex < 0 || pageIndex >= document->numPages()) {
            return;
        }

        Poppler::Page *page = document->page(pageIndex);
        if (!page) {
            return;
        }

        QImage image = page->renderToImage();
        scene->clear(); // очистка старых страниц
        scene->addPixmap(QPixmap::fromImage(image));
        scene->setSceneRect(image.rect());
        delete page; // освобождение памяти
    }

protected:
    void wheelEvent(QWheelEvent *event) override {
        if (event->angleDelta().y() > 0) {
            zoomIn(); // Увеличиваем зум при прокрутке вверх
        } else {
            zoomOut(); // Уменьшаем зум при прокрутке вниз
        }
        event->accept();
    }

private:
    void zoomIn() {
        view->scale(1.2, 1.2); // Увеличение зума
    }

    void zoomOut() {
        view->scale(0.8, 0.8); // Уменьшение зума
    }

    QGraphicsScene *scene;
    QGraphicsView *view;
    QScrollArea *scrollArea;
    Poppler::Document *document = nullptr;
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    PdfViewer viewer;
    viewer.loadPdf("path/to/your/file.pdf"); // Замените на ваш PDF файл
    viewer.resize(800, 600);
    viewer.show();
    return app.exec();
}

#include "main.moc"
```

.
#!/bin/bash
set -e

# ==== Параметры ====
TOOLCHAIN=/opt/toolchains/gcc-arm-linux-gnueabihf
SYSROOT=/opt/arm-sysroot
PREFIX=/opt/mupdf-full-arm

# Используемые triplet и компиляторы
HOST=arm-linux-gnueabihf
export CC=$TOOLCHAIN/bin/${HOST}-gcc
export AR=$TOOLCHAIN/bin/${HOST}-ar
export LD=$TOOLCHAIN/bin/${HOST}-ld
export RANLIB=$TOOLCHAIN/bin/${HOST}-ranlib
export CFLAGS="--sysroot=$SYSROOT"
export LDFLAGS="--sysroot=$SYSROOT"

mkdir -p build-mupdf && cd build-mupdf

echo "===== [1/4] Скачиваем MuPDF 1.9a ====="
rm -rf mupdf
git clone https://git.ghostscript.com/mupdf.git
cd mupdf
git checkout release-1.9a
cd ..

echo "===== [2/4] Скачиваем и собираем FreeType ====="
wget https://download.savannah.gnu.org/releases/freetype/freetype-2.10.4.tar.gz
tar -xzf freetype-2.10.4.tar.gz
cd freetype-2.10.4

./configure \
  --host=$HOST \
  --prefix=$PREFIX \
  --with-sysroot=$SYSROOT \
  --enable-static \
  --disable-shared

make -j$(nproc)
make install
cd ..

echo "===== [3/4] Скачиваем и собираем HarfBuzz ====="
git clone https://github.com/harfbuzz/harfbuzz.git
cd harfbuzz
git checkout 2.7.2

./autogen.sh
./configure \
  --host=$HOST \
  --prefix=$PREFIX \
  --with-sysroot=$SYSROOT \
  --enable-static \
  --disable-shared \
  --disable-introspection \
  --disable-gtk-doc \
  --disable-icu \
  --disable-graphite2 \
  --disable-android-shaper

make -j$(nproc)
make install
cd ..

echo "===== [4/4] Собираем MuPDF 1.9a под ARM ====="
cd mupdf

# Удалим встроенные thirdparty и используем внешние
rm -rf thirdparty/freetype thirdparty/harfbuzz

make clean || true
make build=release \
  HAVE_X11=no HAVE_GLUT=no HAVE_GL=no HAVE_CURL=no \
  prefix=$PREFIX \
  FREETYPE_CFLAGS="-I$PREFIX/include/freetype2" \
  FREETYPE_LIBS="-L$PREFIX/lib -lfreetype" \
  HARFBUZZ_CFLAGS="-I$PREFIX/include/harfbuzz" \
  HARFBUZZ_LIBS="-L$PREFIX/lib -lharfbuzz"

make install build=release prefix=$PREFIX

echo
echo "===== ✅ Готово ====="
echo "Собрано и установлено в: $PREFIX"
echo "Содержимое lib/:"
ls -1 $PREFIX/lib/libmupdf*.a


